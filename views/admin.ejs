<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Administration</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Encode+Sans" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="style/css/main.css" />
    <script>
        function toogleFullscreen(image) {
            image.classList.toggle('fullscreen');
            console.log('hi')
        }
    </script>

</head>

<body id="adminbody">






    <nav id="scanfcode" class="navbar">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" id="toogle-button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
             <span class="glyphicon glyphicon-menu-hamburger"></span>                     
            </button>
                <a id="logo" class="navbar-brand" href="#"><span>ET</span>-Admin</a>
            </div>
            <div class="collapse navbar-collapse" id="myNavbar">

                <ul id="link" class="nav navbar-nav navbar-right">



                    <li class="dropdown" id="first-link">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#"><img src="./img/icons/punkte.png" height="24px"></a>
                        <ul class="dropdown-menu">
                            <li><a href="https://www.et-ing.at/">Homepage</a></li>
                            <li><a href="https://vrm.victronenergy.com/login">VRM Portal</a></li>

                        </ul>
                    </li>
                    <li>
                        <a href="/"><img class="icons" src="./img/icons/logout.png" height="24px" /></a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- admin.ejs -->
    <div style="margin: 50px;
    position: relative;
    top: 38px;">
        <h1 style="font-family: Neuropol; font-size: 57px;">Administrator</h1>
        <p style="font-family: Monserrat; font-size: 20px;">Willkommen zurück, Udo</p>
        <br><br>

        <form id="add-form" action="/api/news" method="POST" enctype="multipart/form-data">
            <div class="inputGroup">
                <input type="text" name="autor">
                <label for="name">Dein Name</label>
            </div>
            <div class="inputGroup">
                <input type="text" name="title" required>
                <label for="name">Titel</label>
            </div>
            <div class="inputGroup">
                <input type="text" name="hashtag">
                <label for="name"># Hashtag</label>
            </div>
            <div class="inputGroup">
                <textarea name="content" required></textarea>
                <label for="name">Content</label>
            </div>





            <input type="file" onchange="checkFileSize()" name="picture" id="picture" accept="image/jpeg, image/png, image/gif,video/mp4">

            <button id="addfeed" type="submit">Speichern</button>
            <p id="errorMessage" style="    display: block;
            color: red;
            /* margin: 5%; */
            width: 342px;
            margin-top: 3%;
            color: white;
            padding: 10px;
            border-radius: 30px;
            background: darkred;
        ">Max. 10MB. Please choose a small file.</p>
            <script>
                function checkFileSize() {
                    var fileInput = document.getElementById("picture");
                    var errorMessage = document.getElementById("errorMessage");
                    var maxSize = 10 * 1024 * 1024;

                    if (fileInput.files.length > 0) {
                        var fileSize = fileInput.files[0].size;
                        if (fileSize > maxSize) {
                            errorMessage.style.display = "block";
                            fileInput.value = ""; // Reset file input value
                        } else {
                            errorMessage.style.display = "none";
                        }
                    }
                }
            </script>

        </form>
        <span style="font-family: Monserrat;     font-size: 26px;">Deine Aktiven News Feeds</span>

        <div class="container-flex">
            <div class="news">
                <% for (const newsItem of newsItems) { %>
                    <div class="news-item" data-id="<%= newsItem._id %>">
                        <div id="imgcontainer">
                            <% if (newsItem.picture) { %>
                                <% if (newsItem.picture.endsWith('.mp4')) { %>
                                    <video class="hov" src="<%= newsItem.picture %>" onclick="toggleFullscreen(this)" autoplay controls style="width: 300px; border-radius: 21px;"></video>
                                    <% } else { %>
                                        <img class="hov" src="<%= newsItem.picture %>" onclick="toggleFullscreen(this)" style="width: 300px; object-fit: cover; border-radius: 21px;" alt="News Image">
                                        <% } %>
                                            <% } else { %>
                                                <img class="hov" src="/img/placeholderimg.png" style="width: 300px; object-fit: cover; border-radius: 21px;" alt="Default Template Image">
                                                <% } %>
                        </div>
                        <div id="fullscreen-img"></div>
                        <h2 class="h2cont">
                            <%= newsItem.title %>
                        </h2>
                        <hr>
                        <p class="pcont">
                            <%= newsItem.content %>
                        </p>
                        <span style="text-align: left; color: #d54113;"># <%= newsItem.hashtag %></span>
                        <br><br>
                        <form class="delete-form" action="/api/news/${newsItem._id}" method="DELETE">
                            <input type="hidden" name="id" value="<%= newsItem._id %>">
                            <button class="noselect" type="submit"><span class='text'>Delete</span><span class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"/></svg></span></button>
                        </form>

                        <p id="CID" style="font-size:10px">
                            Container-ID:
                            <%= newsItem._id %>
                                <br>Timestamp:
                                <%= newsItem.timestamp %>
                                    <br>Verfasser:
                                    <%= newsItem.autor %>

                        </p>
                    </div>
                    <% } %>
            </div>

        </div>
    </div>

    <!--Info Box-->
    <label>
    <input type="checkbox" class="alertCheckbox" autocomplete="off" />
    <div class="alert error">
      <span class="alertClose">X</span>
      <span class="alertText">Bitte lade die Seite nach Änderungen neu !
      
      <br class="clear"/></span>
    </div>
  </label>
    <script>
        var isAdvancedUpload = function() {
            var div = document.createElement('div');
            return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;
        }();

        let draggableFileArea = document.querySelector(".drag-file-area");
        let browseFileText = document.querySelector(".browse-files");
        let uploadIcon = document.querySelector(".upload-icon");
        let dragDropText = document.querySelector(".dynamic-message");
        let fileInput = document.querySelector(".default-file-input");
        let cannotUploadMessage = document.querySelector(".cannot-upload-message");
        let cancelAlertButton = document.querySelector(".cancel-alert-button");
        let uploadedFile = document.querySelector(".file-block");
        let fileName = document.querySelector(".file-name");
        let fileSize = document.querySelector(".file-size");
        let progressBar = document.querySelector(".progress-bar");
        let removeFileButton = document.querySelector(".remove-file-icon");
        let uploadButton = document.querySelector(".upload-button");
        let fileFlag = 0;

        fileInput.addEventListener("click", () => {
            fileInput.value = '';
            console.log(fileInput.value);
        });

        fileInput.addEventListener("change", e => {
            console.log(" > " + fileInput.value)
            uploadIcon.innerHTML = 'check_circle';
            dragDropText.innerHTML = 'File Dropped Successfully!';
            document.querySelector(".label").innerHTML = `drag & drop or <span class="browse-files"> <input type="file" class="default-file-input" style=""/> <span class="browse-files-text" style="top: 0;"> browse file</span></span>`;
            uploadButton.innerHTML = `Upload`;
            fileName.innerHTML = fileInput.files[0].name;
            fileSize.innerHTML = (fileInput.files[0].size / 1024).toFixed(1) + " KB";
            uploadedFile.style.cssText = "display: flex;";
            progressBar.style.width = 0;
            fileFlag = 0;
        });

        uploadButton.addEventListener("click", () => {
            let isFileUploaded = fileInput.value;
            if (isFileUploaded != '') {
                if (fileFlag == 0) {
                    fileFlag = 1;
                    var width = 0;
                    var id = setInterval(frame, 50);

                    function frame() {
                        if (width >= 390) {
                            clearInterval(id);
                            uploadButton.innerHTML = `<span class="material-icons-outlined upload-button-icon"> check_circle </span> Uploaded`;
                        } else {
                            width += 5;
                            progressBar.style.width = width + "px";
                        }
                    }
                }
            } else {
                cannotUploadMessage.style.cssText = "display: flex; animation: fadeIn linear 1.5s;";
            }
        });

        cancelAlertButton.addEventListener("click", () => {
            cannotUploadMessage.style.cssText = "display: none;";
        });

        if (isAdvancedUpload) {
            ["drag", "dragstart", "dragend", "dragover", "dragenter", "dragleave", "drop"].forEach(evt =>
                draggableFileArea.addEventListener(evt, e => {
                    e.preventDefault();
                    e.stopPropagation();
                })
            );

            ["dragover", "dragenter"].forEach(evt => {
                draggableFileArea.addEventListener(evt, e => {
                    e.preventDefault();
                    e.stopPropagation();
                    uploadIcon.innerHTML = 'file_download';
                    dragDropText.innerHTML = 'Drop your file here!';
                });
            });

            draggableFileArea.addEventListener("drop", e => {
                uploadIcon.innerHTML = 'check_circle';
                dragDropText.innerHTML = 'File Dropped Successfully!';
                document.querySelector(".label").innerHTML = `drag & drop or <span class="browse-files"> <input type="file" class="default-file-input" style=""/> <span class="browse-files-text" style="top: -23px; left: -20px;"> browse file</span> </span>`;
                uploadButton.innerHTML = `Upload`;

                let files = e.dataTransfer.files;
                fileInput.files = files;
                console.log(files[0].name + " " + files[0].size);
                console.log(document.querySelector(".default-file-input").value);
                fileName.innerHTML = files[0].name;
                fileSize.innerHTML = (files[0].size / 1024).toFixed(1) + " KB";
                uploadedFile.style.cssText = "display: flex;";
                progressBar.style.width = 0;
                fileFlag = 0;
            });
        }

        removeFileButton.addEventListener("click", () => {
            uploadedFile.style.cssText = "display: none;";
            fileInput.value = '';
            uploadIcon.innerHTML = 'file_upload';
            dragDropText.innerHTML = 'Drag & drop any file here';
            document.querySelector(".label").innerHTML = `or <span class="browse-files"> <input type="file" class="default-file-input"/> <span class="browse-files-text">browse file</span> <span>from device</span> </span>`;
            uploadButton.innerHTML = `Upload`;
        });
    </script>
    <script>
        function toggleFullscreen(element) {
            const fullscreenDiv = document.getElementById('fullscreen-img');
            fullscreenDiv.style.backgroundImage = `url('${element.src}')`;

            if (element.requestFullscreen) {
                element.requestFullscreen();
            } else if (element.mozRequestFullScreen) {
                element.mozRequestFullScreen();
            } else if (element.webkitRequestFullscreen) {
                element.webkitRequestFullscreen();
            } else if (element.msRequestFullscreen) {
                element.msRequestFullscreen();
            }

            fullscreenDiv.classList.add('fullscreen', 'active');
        }

        document.addEventListener('fullscreenchange', exitFullscreenHandler);
        document.addEventListener('mozfullscreenchange', exitFullscreenHandler);
        document.addEventListener('webkitfullscreenchange', exitFullscreenHandler);
        document.addEventListener('msfullscreenchange', exitFullscreenHandler);

        function exitFullscreenHandler() {
            const fullscreenDiv = document.getElementById('fullscreen-img');
            if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {
                fullscreenDiv.classList.remove('active');
            }
        }
    </script>
    <script>
        // Listen for form submission to delete a news item
        const deleteForms = document.querySelectorAll('.delete-form');

        deleteForms.forEach((form) => {
            form.addEventListener('submit', async(event) => {
                event.preventDefault();
                const formData = new FormData(form);
                const newsId = formData.get('id');

                try {
                    // Delete the news item from the server
                    const response = await fetch('/api/news/' + newsId, {
                        method: 'DELETE',
                    });
                    if (!response.ok) {
                        throw new Error(response.statusText);
                    }

                    // Delete the image file from the server
                    const imageResponse = await fetch('/api/news/' + newsId + '/image', {
                        method: 'DELETE',
                    });
                    if (!imageResponse.ok) {
                        throw new Error(imageResponse.statusText);
                    }

                    // Remove the news item from the DOM
                    const newsDiv = document.querySelector(`[data-id="${newsId}"]`);
                    newsDiv.parentNode.removeChild(newsDiv);
                } catch (err) {
                    console.error(err);
                }
            });
        });

        // Helper function to create a news item div
        function createNewsDiv(newsItem) {
            const newsDiv = document.createElement('div');
            newsDiv.classList.add('news-item');
            newsDiv.dataset.id = newsItem._id;
            newsDiv.innerHTML = `
    <h2 style="color:orange;">${newsItem.title}</h2>
    <p>${newsItem.content}</p>
    <form class="delete-form">
      <input type="hidden" name="id" value="${newsItem._id}">
      <button type="submit">Delete</button>
    </form>
  `;
            return newsDiv;
        }
    </script>
    <script>
        window.addEventListener('resize', function() {
            var screenWidth = window.innerWidth;
            var flexContainer = document.querySelector('.flex-container');
            if (screenWidth < 768) {
                flexContainer.style.flexDirection = 'column';
            } else {
                flexContainer.style.flexDirection = 'row';
            }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js" integrity="sha384-mQ93GR66B00ZXjt0YO5KlohRA5SY2XofN4zfuZxLkoj1gXtW8ANNCe9d5Y3eG5eD" crossorigin="anonymous"></script>
</body>

</html>